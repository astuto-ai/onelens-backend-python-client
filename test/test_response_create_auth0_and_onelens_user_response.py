# coding: utf-8

"""
onelens-backend

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 0.1.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from onelens_backend_client.models.response_create_auth0_and_onelens_user_response import (
    ResponseCreateAuth0AndOnelensUserResponse,
)


class TestResponseCreateAuth0AndOnelensUserResponse(unittest.TestCase):
    """ResponseCreateAuth0AndOnelensUserResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(
        self, include_optional
    ) -> ResponseCreateAuth0AndOnelensUserResponse:
        """Test ResponseCreateAuth0AndOnelensUserResponse
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ResponseCreateAuth0AndOnelensUserResponse`
        """
        model = ResponseCreateAuth0AndOnelensUserResponse()
        if include_optional:
            return ResponseCreateAuth0AndOnelensUserResponse(
                data = onelens_backend_client.models.create_auth0_and_onelens_user_response.CreateAuth0AndOnelensUserResponse(
                    auth0_data = null, 
                    onelens_data = null, ),
                message = ''
            )
        else:
            return ResponseCreateAuth0AndOnelensUserResponse(
                data = onelens_backend_client.models.create_auth0_and_onelens_user_response.CreateAuth0AndOnelensUserResponse(
                    auth0_data = null, 
                    onelens_data = null, ),
        )
        """

    def testResponseCreateAuth0AndOnelensUserResponse(self):
        """Test ResponseCreateAuth0AndOnelensUserResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
