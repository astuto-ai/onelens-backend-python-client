# coding: utf-8

"""
onelens-backend

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0.1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from onelens_backend_client.models.onelens_models_service_interfaces_tenant_data_metrics_service_filter_criteria import (
    OnelensModelsServiceInterfacesTenantDataMetricsServiceFilterCriteria,
)


class TestOnelensModelsServiceInterfacesTenantDataMetricsServiceFilterCriteria(
    unittest.TestCase
):
    """OnelensModelsServiceInterfacesTenantDataMetricsServiceFilterCriteria unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(
        self, include_optional
    ) -> OnelensModelsServiceInterfacesTenantDataMetricsServiceFilterCriteria:
        """Test OnelensModelsServiceInterfacesTenantDataMetricsServiceFilterCriteria
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `OnelensModelsServiceInterfacesTenantDataMetricsServiceFilterCriteria`
        """
        model = OnelensModelsServiceInterfacesTenantDataMetricsServiceFilterCriteria()
        if include_optional:
            return OnelensModelsServiceInterfacesTenantDataMetricsServiceFilterCriteria(
                var_field = '',
                operator = '',
                values = None
            )
        else:
            return OnelensModelsServiceInterfacesTenantDataMetricsServiceFilterCriteria(
                var_field = '',
                operator = '',
                values = None,
        )
        """

    def testOnelensModelsServiceInterfacesTenantDataMetricsServiceFilterCriteria(self):
        """Test OnelensModelsServiceInterfacesTenantDataMetricsServiceFilterCriteria"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
