# coding: utf-8

"""
onelens-backend

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0.1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from onelens_backend_client.models.get_mapped_resource_item import GetMappedResourceItem


class TestGetMappedResourceItem(unittest.TestCase):
    """GetMappedResourceItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetMappedResourceItem:
        """Test GetMappedResourceItem
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `GetMappedResourceItem`
        """
        model = GetMappedResourceItem()
        if include_optional:
            return GetMappedResourceItem(
                ol_id = '',
                cloud_id = '',
                region = '',
                service = '',
                service_display_name = '',
                resource_type = '',
                resource_id = '',
                resource_url_template = '',
                crn = '',
                title = '',
                provider = '',
                status = '',
                tags = None,
                additional_info = onelens_backend_client.models.additional_info.Additional Info(),
                run_id = '',
                last_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                account_name = '',
                tagged_resource = True,
                resource_created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                resource_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                conflict_status = 'CONFLICT',
                mapped_to = [
                    onelens_backend_client.models.hierarchy_node_entity_with_details.HierarchyNodeEntityWithDetails(
                        id = '', 
                        name = '', 
                        category = 'ROOT', 
                        resource_filters = [
                            onelens_backend_client.models.hierarchy_node_resource_filters.HierarchyNodeResourceFilters(
                                key = 56, 
                                field = '', 
                                operator = '', 
                                value = null, 
                                json_key = '', )
                            ], 
                        resource_filter_expression = '', 
                        is_shared = True, 
                        attribution_details = onelens_backend_client.models.hierarchy_node_attribution_details.HierarchyNodeAttributionDetails(
                            nodes = [
                                ''
                                ], 
                            strategy = null, ), 
                        state = null, 
                        sql_filter = '', 
                        description = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_by = '', 
                        updated_by = '', 
                        path = [
                            onelens_backend_client.models.hierarchy_node_path_item.HierarchyNodePathItem(
                                node_id = null, 
                                name = '', )
                            ], 
                        parent = onelens_backend_client.models.hierarchy_node_parent_item.HierarchyNodeParentItem(
                            node_id = null, 
                            name = '', 
                            category = null, ), 
                        resources_metrics = onelens_backend_client.models.hierarchy_node_resource_metrics.HierarchyNodeResourceMetrics(
                            total = 56, 
                            unique = 56, 
                            conflicting = 56, ), )
                    ]
            )
        else:
            return GetMappedResourceItem(
                ol_id = '',
                cloud_id = '',
                region = '',
                service = '',
                service_display_name = '',
                resource_type = '',
                resource_url_template = '',
                crn = '',
                title = '',
                provider = '',
                status = '',
                additional_info = onelens_backend_client.models.additional_info.Additional Info(),
                run_id = '',
                last_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                conflict_status = 'CONFLICT',
                mapped_to = [
                    onelens_backend_client.models.hierarchy_node_entity_with_details.HierarchyNodeEntityWithDetails(
                        id = '', 
                        name = '', 
                        category = 'ROOT', 
                        resource_filters = [
                            onelens_backend_client.models.hierarchy_node_resource_filters.HierarchyNodeResourceFilters(
                                key = 56, 
                                field = '', 
                                operator = '', 
                                value = null, 
                                json_key = '', )
                            ], 
                        resource_filter_expression = '', 
                        is_shared = True, 
                        attribution_details = onelens_backend_client.models.hierarchy_node_attribution_details.HierarchyNodeAttributionDetails(
                            nodes = [
                                ''
                                ], 
                            strategy = null, ), 
                        state = null, 
                        sql_filter = '', 
                        description = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_by = '', 
                        updated_by = '', 
                        path = [
                            onelens_backend_client.models.hierarchy_node_path_item.HierarchyNodePathItem(
                                node_id = null, 
                                name = '', )
                            ], 
                        parent = onelens_backend_client.models.hierarchy_node_parent_item.HierarchyNodeParentItem(
                            node_id = null, 
                            name = '', 
                            category = null, ), 
                        resources_metrics = onelens_backend_client.models.hierarchy_node_resource_metrics.HierarchyNodeResourceMetrics(
                            total = 56, 
                            unique = 56, 
                            conflicting = 56, ), )
                    ],
        )
        """

    def testGetMappedResourceItem(self):
        """Test GetMappedResourceItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
