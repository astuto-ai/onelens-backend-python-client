# coding: utf-8

"""
onelens-backend

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from onelens_backend_client.models.tenant_ticket import TenantTicket


class TestTenantTicket(unittest.TestCase):
    """TenantTicket unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TenantTicket:
        """Test TenantTicket
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `TenantTicket`
        """
        model = TenantTicket()
        if include_optional:
            return TenantTicket(
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                monitor_id = '',
                ticket_category = 'POLICY_TICKET',
                system_state = 'RESOLVED',
                user_state = 'UNASSIGNED',
                details = onelens_backend_client.models.ticket_details.TicketDetails(
                    policy_id = '', 
                    entity_id = '', ),
                id = ''
            )
        else:
            return TenantTicket(
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                monitor_id = '',
                ticket_category = 'POLICY_TICKET',
                system_state = 'RESOLVED',
                user_state = 'UNASSIGNED',
                id = '',
        )
        """

    def testTenantTicket(self):
        """Test TenantTicket"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
