# coding: utf-8

"""
    onelens-backend

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from onelens_backend_client.models.hierarchy_node_entity_dto import HierarchyNodeEntityDTO

class TestHierarchyNodeEntityDTO(unittest.TestCase):
    """HierarchyNodeEntityDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HierarchyNodeEntityDTO:
        """Test HierarchyNodeEntityDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `HierarchyNodeEntityDTO`
        """
        model = HierarchyNodeEntityDTO()
        if include_optional:
            return HierarchyNodeEntityDTO(
                id = '',
                name = '',
                category = 'ROOT',
                resource_filters = [
                    onelens_backend_client.models.hierarchy_node_resource_filters.HierarchyNodeResourceFilters(
                        key = null, 
                        field = '', 
                        operator = '', 
                        value = null, )
                    ],
                resource_filter_expression = '',
                is_shared = True,
                attribution_details = onelens_backend_client.models.hierarchy_node_attribution_details.HierarchyNodeAttributionDetails(
                    nodes = [
                        56
                        ], 
                    strategy = null, ),
                state = 'ACTIVE',
                sql_filter = ''
            )
        else:
            return HierarchyNodeEntityDTO(
                name = '',
                category = 'ROOT',
                state = 'ACTIVE',
        )
        """

    def testHierarchyNodeEntityDTO(self):
        """Test HierarchyNodeEntityDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
