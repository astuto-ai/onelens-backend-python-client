# coding: utf-8

"""
onelens-backend

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from onelens_backend_client.models.response_list_resource_hierarchy_mapping import (
    ResponseListResourceHierarchyMapping,
)


class TestResponseListResourceHierarchyMapping(unittest.TestCase):
    """ResponseListResourceHierarchyMapping unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResponseListResourceHierarchyMapping:
        """Test ResponseListResourceHierarchyMapping
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ResponseListResourceHierarchyMapping`
        """
        model = ResponseListResourceHierarchyMapping()
        if include_optional:
            return ResponseListResourceHierarchyMapping(
                data = [
                    onelens_backend_client.models.resource_hierarchy_mapping.ResourceHierarchyMapping(
                        hierarchy_node_id = '', 
                        resource_id = '', )
                    ],
                message = ''
            )
        else:
            return ResponseListResourceHierarchyMapping(
                data = [
                    onelens_backend_client.models.resource_hierarchy_mapping.ResourceHierarchyMapping(
                        hierarchy_node_id = '', 
                        resource_id = '', )
                    ],
        )
        """

    def testResponseListResourceHierarchyMapping(self):
        """Test ResponseListResourceHierarchyMapping"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
