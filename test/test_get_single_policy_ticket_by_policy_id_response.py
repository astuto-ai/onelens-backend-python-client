# coding: utf-8

"""
onelens-backend

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0.1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from onelens_backend_client.models.get_single_policy_ticket_by_policy_id_response import (
    GetSinglePolicyTicketByPolicyIdResponse,
)


class TestGetSinglePolicyTicketByPolicyIdResponse(unittest.TestCase):
    """GetSinglePolicyTicketByPolicyIdResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(
        self, include_optional
    ) -> GetSinglePolicyTicketByPolicyIdResponse:
        """Test GetSinglePolicyTicketByPolicyIdResponse
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `GetSinglePolicyTicketByPolicyIdResponse`
        """
        model = GetSinglePolicyTicketByPolicyIdResponse()
        if include_optional:
            return GetSinglePolicyTicketByPolicyIdResponse(
                ticket_id = '',
                ticket_status = 'TO_DO',
                ticket_state = 'OPEN',
                violation_attributes = onelens_backend_client.models.violation_attributes.Violation Attributes(),
                entity_id = '',
                entity_name = '',
                region = '',
                service = '',
                service_display_name = '',
                account_id = '',
                recommendation_unit_title = '',
                potential_savings = 1.337
            )
        else:
            return GetSinglePolicyTicketByPolicyIdResponse(
                ticket_id = '',
                ticket_status = 'TO_DO',
                ticket_state = 'OPEN',
                violation_attributes = onelens_backend_client.models.violation_attributes.Violation Attributes(),
                entity_id = '',
                entity_name = '',
                region = '',
                service = '',
                service_display_name = '',
                account_id = '',
                recommendation_unit_title = '',
                potential_savings = 1.337,
        )
        """

    def testGetSinglePolicyTicketByPolicyIdResponse(self):
        """Test GetSinglePolicyTicketByPolicyIdResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
